const express = require("express");
const http = require("http");
const WebSocket = require("ws");
const cors = require("cors");

const app = express();
app.use(cors());

const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

const clients = new Map(); // Map<ws, { userId, lat, lng }>

// Í±∞Î¶¨ Í≥ÑÏÇ∞ Ìï®Ïàò (Haversine)
function getDistanceKm(lat1, lon1, lat2, lon2) {
  const R = 6371; // km
  const dLat = ((lat2 - lat1) * Math.PI) / 180;
  const dLon = ((lon2 - lon1) * Math.PI) / 180;
  const a =
    Math.sin(dLat / 2) ** 2 +
    Math.cos((lat1 * Math.PI) / 180) *
      Math.cos((lat2 * Math.PI) / 180) *
      Math.sin(dLon / 2) ** 2;
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  return R * c;
}

const RADIUS_KM = 0.01;

wss.on("connection", (ws) => {
  console.log("üîó New client connected");

  ws.on("message", (message) => {
    try {
      const data = JSON.parse(message.toString());

      if (
        data.type === "location_update" &&
        data.userId &&
        data.lat &&
        data.lng
      ) {
        clients.set(ws, {
          userId: data.userId,
          lat: data.lat,
          lng: data.lng,
        });

        console.log(
          `üì° ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ from ${data.userId}: (${data.lat}, ${data.lng})`
        );

        // ‚úÖ ÌòÑÏû¨ Ï†ëÏÜç Ï§ëÏù∏ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ïàò ÌôïÏù∏
        console.log("üë• ÌòÑÏû¨ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ïàò:", clients.size);

        // ‚úÖ Î™®Îì† ÏÇ¨Ïö©Ïûê ID Ï∂úÎ†•
        console.log(
          "üÜî ÌòÑÏû¨ Ï†ëÏÜçÏûê Î™©Î°ù:",
          Array.from(clients.values()).map((c) => c.userId)
        );

        // Î∞òÍ≤Ω ÎÇ¥ ÏÇ¨Ïö©Ïûê Ï∞æÍ∏∞ Î°úÏßÅ ÏÉùÎûµ (Í∏∞Ï°¥ÎåÄÎ°ú Ïú†ÏßÄ)
        // ...
      }
    } catch (err) {
      console.error("‚ùå Î©îÏãúÏßÄ Ï≤òÎ¶¨ Ï§ë Ïò§Î•ò:", err.message);
    }
  });

  ws.on("close", () => {
    console.log("‚ùå Client disconnected");
    clients.delete(ws);
  });
});
